% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_clone_trees.R
\name{get_clone_trees}
\alias{get_clone_trees}
\title{Return clone trees from the fit.}
\usage{
get_clone_trees(x, ...)
}
\arguments{
\item{x}{A VIBER fit.}

\item{...}{Extra parameters passed to the constructor \code{ctree::cetrees}, which
affect the sampling of the trees.}
}
\value{
The output of the constructor \code{ctree::cetrees}.
}
\description{
This function uses the output fit of VIBER
to create a call to \code{ctree} (\url{https://caravagn.github.io/ctree/}),
a package to create clone trees for cancer evolution models.

Creation of a clone tree requires annotations that are not usually
necessary for just a plain  VIBER analyses. These annotations report the status of \code{driver}
and \code{gene} for each one of the input datapoints; the annotations should
have been passed when calling the \code{variational_fit} function, and stored
inside the \code{data} field of the VIBER object.

The clonal cluster is estimated from the cluster with the highest parameter
values in most of the input dimensions (Binomial peaks).

The output is the result of calling the constructor \code{ctree::cetrees}
on the input clustering results \code{x}.
}
\examples{


data(mvbmm_example)

# We create annotation data assigning dummy names
# and picking 10 events to be drivers (randomly chosen)
data_annotations = data.frame(
 gene = paste0("G", 1:nrow(mvbmm_example$trials)),
 driver = FALSE
 )

data_annotations$driver[sample(1:nrow(data_annotations), 10)] = TRUE

# Compared to the main variational_fit, we use the same call but add data
f = variational_fit(mvbmm_example$successes, mvbmm_example$trials, data = data_annotations)
print(f)

trees = get_clone_trees(f)

ctree:::print.ctree(trees[[1]])
ctree::plot.ctree(trees[[1]])
}
